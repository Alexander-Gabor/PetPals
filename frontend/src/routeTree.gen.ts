/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProfileImport } from './routes/profile'
import { Route as PetFosterPageImport } from './routes/pet-foster-page'
import { Route as DogAdoptionImport } from './routes/dog-adoption'
import { Route as CatAdoptionImport } from './routes/cat-adoption'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const PetFosterPageRoute = PetFosterPageImport.update({
  id: '/pet-foster-page',
  path: '/pet-foster-page',
  getParentRoute: () => rootRoute,
} as any)

const DogAdoptionRoute = DogAdoptionImport.update({
  id: '/dog-adoption',
  path: '/dog-adoption',
  getParentRoute: () => rootRoute,
} as any)

const CatAdoptionRoute = CatAdoptionImport.update({
  id: '/cat-adoption',
  path: '/cat-adoption',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/cat-adoption': {
      id: '/cat-adoption'
      path: '/cat-adoption'
      fullPath: '/cat-adoption'
      preLoaderRoute: typeof CatAdoptionImport
      parentRoute: typeof rootRoute
    }
    '/dog-adoption': {
      id: '/dog-adoption'
      path: '/dog-adoption'
      fullPath: '/dog-adoption'
      preLoaderRoute: typeof DogAdoptionImport
      parentRoute: typeof rootRoute
    }
    '/pet-foster-page': {
      id: '/pet-foster-page'
      path: '/pet-foster-page'
      fullPath: '/pet-foster-page'
      preLoaderRoute: typeof PetFosterPageImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/cat-adoption': typeof CatAdoptionRoute
  '/dog-adoption': typeof DogAdoptionRoute
  '/pet-foster-page': typeof PetFosterPageRoute
  '/profile': typeof ProfileRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/cat-adoption': typeof CatAdoptionRoute
  '/dog-adoption': typeof DogAdoptionRoute
  '/pet-foster-page': typeof PetFosterPageRoute
  '/profile': typeof ProfileRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/cat-adoption': typeof CatAdoptionRoute
  '/dog-adoption': typeof DogAdoptionRoute
  '/pet-foster-page': typeof PetFosterPageRoute
  '/profile': typeof ProfileRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/cat-adoption'
    | '/dog-adoption'
    | '/pet-foster-page'
    | '/profile'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/cat-adoption'
    | '/dog-adoption'
    | '/pet-foster-page'
    | '/profile'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/cat-adoption'
    | '/dog-adoption'
    | '/pet-foster-page'
    | '/profile'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  CatAdoptionRoute: typeof CatAdoptionRoute
  DogAdoptionRoute: typeof DogAdoptionRoute
  PetFosterPageRoute: typeof PetFosterPageRoute
  ProfileRoute: typeof ProfileRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  CatAdoptionRoute: CatAdoptionRoute,
  DogAdoptionRoute: DogAdoptionRoute,
  PetFosterPageRoute: PetFosterPageRoute,
  ProfileRoute: ProfileRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/cat-adoption",
        "/dog-adoption",
        "/pet-foster-page",
        "/profile"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/cat-adoption": {
      "filePath": "cat-adoption.tsx"
    },
    "/dog-adoption": {
      "filePath": "dog-adoption.tsx"
    },
    "/pet-foster-page": {
      "filePath": "pet-foster-page.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
